{"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/index.ts\"],\"names\":[],\"mappings\":\"AASA,MAAM,UAAU,QAAQ,CACtB,IAAO,EACP,gBAAqB,EACrB,OAEC;IAHD,iCAAA,EAAA,qBAAqB;IACrB,wBAAA,EAAA;QACE,WAAW,EAAE,KAAK;KACnB;IAED,IAAI,SAAqC,CAAC;IAE1C,OAAO;QAAoB,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACvC,IAAM,OAAO,GAAG,IAAI,CAAC;QAErB,IAAM,OAAO,GAAG;YACd,SAAS,GAAG,SAAS,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBACxB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aAC3B;QACH,CAAC,CAAA;QAED,IAAM,aAAa,GAAG,OAAO,CAAC,WAAW,IAAI,SAAS,KAAK,SAAS,CAAC;QAErE,IAAI,SAAS,KAAK,SAAS,EAAE;YAC3B,YAAY,CAAC,SAAS,CAAC,CAAC;SACzB;QAED,SAAS,GAAG,UAAU,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;QAElD,IAAI,aAAa,EAAE;YACjB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SAC3B;IACH,CAAQ,CAAA;AACV,CAAC\"}","code":"export function debounce(func, waitMilliseconds, options) {\r\n    if (waitMilliseconds === void 0) { waitMilliseconds = 50; }\r\n    if (options === void 0) { options = {\r\n        isImmediate: false\r\n    }; }\r\n    var timeoutId;\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var context = this;\r\n        var doLater = function () {\r\n            timeoutId = undefined;\r\n            if (!options.isImmediate) {\r\n                func.apply(context, args);\r\n            }\r\n        };\r\n        var shouldCallNow = options.isImmediate && timeoutId === undefined;\r\n        if (timeoutId !== undefined) {\r\n            clearTimeout(timeoutId);\r\n        }\r\n        timeoutId = setTimeout(doLater, waitMilliseconds);\r\n        if (shouldCallNow) {\r\n            func.apply(context, args);\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=index.js.map","dts":{"name":"/Users/cho/projects/ts-debounce/index.d.ts","writeByteOrderMark":false,"text":"/**\r\n * A function that emits a side effect and does not return anything.\r\n */\r\nexport declare type Procedure = (...args: any[]) => void;\r\nexport declare type Options = {\r\n    isImmediate: boolean;\r\n};\r\nexport declare function debounce<F extends Procedure>(func: F, waitMilliseconds?: number, options?: Options): F;\r\n"}}
